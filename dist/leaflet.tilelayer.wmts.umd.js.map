{"version":3,"file":"leaflet.tilelayer.wmts.umd.js","sources":["../src/leaflet.tilelayer.wmts.js"],"sourcesContent":["// leaflet-wmts.js\n// Production-ready WMTS TileLayer for Leaflet.\n// Key points:\n// - Spec-compliant KVP (SERVICE, REQUEST, VERSION, ...)\n// - Works out-of-the-box with GoogleMapsCompatible/WebMercator grids (XYZ mapping)\n// - For non-GMC grids, supply tileMatrixLabels so TILEMATRIX matches server identifiers\n// - Supports extraParams (e.g., auth token), baseQuery, crossOrigin, and tileerror handling\n\nimport * as L from \"leaflet\";\n\nexport class WMTS extends L.TileLayer {\n  constructor(url, options) {\n    // Apply core TileLayer options (opacity, zIndex, subdomains, etc.)\n    super(url, options);\n\n    // Destructure WMTS-specific options; keep standard TileLayer options in tileLayerOpts\n    const {\n      layer,\n      tileMatrixSet,\n      style = \"default\",\n      format = \"image/png\",\n      tileMatrixLabels,\n      googleMapsCompatible = true,\n      extraParams,\n      baseQuery,\n      crossOrigin,\n      ...tileLayerOpts\n    } = options || {};\n\n    // Set TileLayer options (e.g., subdomains) on 'this.options'\n    L.setOptions(this, tileLayerOpts);\n\n    // Optional labels mapping Leaflet zoom -> TILEMATRIX (string or numeric IDs)\n    this._labels = tileMatrixLabels;\n    // Fast path: when true, use Leaflet XYZ (z/x/y) directly for TILEMATRIX/COL/ROW\n    this._gmc = googleMapsCompatible === true;\n\n    // Normalize base URL and append any static baseQuery before WMTS params\n    this._baseUrl = url;\n    if (baseQuery && baseQuery.length) {\n      const sep = url.includes(\"?\") ? \"&\" : \"?\";\n      this._baseUrl = `${url}${sep}${baseQuery}`;\n    }\n\n    // Leaflet already handles devicePixelRatio; use tileSize as-is for WIDTH/HEIGHT\n    const size = this.getTileSize();\n    this._wmtsParams = {\n      SERVICE: \"WMTS\",\n      REQUEST: \"GetTile\",\n      VERSION: \"1.0.0\",\n      LAYER: String(layer),\n      STYLE: String(style),\n      TILEMATRIXSET: String(tileMatrixSet),\n      FORMAT: String(format),\n      WIDTH: String(size.x),\n      HEIGHT: String(size.y)\n    };\n\n    // Merge extra static params (e.g., TOKEN) into WMTS KVPs\n    if (extraParams) {\n      for (const [k, v] of Object.entries(extraParams)) {\n        this._wmtsParams[k.toUpperCase()] = String(v);\n      }\n    }\n\n    // Set crossorigin attribute on <img> tags if requested (needed for canvas operations)\n    if (crossOrigin) {\n      this.options.crossOrigin = crossOrigin === true ? \"\" : crossOrigin;\n    }\n  }\n\n  onAdd(map) {\n    // Keep a reference to map CRS for consumers that inspect it\n    this._crs = this.options.crs || map.options.crs;\n\n    // Hook: allow consumers to attach monitoring to tile errors\n    this.on(\"tileerror\", (e) => {\n      // Example: console.warn(\"WMTS tileerror\", e.coords, e?.error);\n    });\n\n    return super.onAdd(map);\n  }\n\n  createTile(coords, done) {\n    const tile = super.createTile(coords, done);\n    // Ensure crossorigin is set on each tile image if configured\n    if (this.options.crossOrigin && !tile.crossOrigin) {\n      tile.crossOrigin = this.options.crossOrigin;\n    }\n    return tile;\n  }\n\n  getTileUrl(coords) {\n    // Leaflet's internal zoom index for current tile\n    const z = this._tileZoom;\n\n    // If labels provided, use them to map zoom -> TILEMATRIX; otherwise use zoom number\n    const matrix =\n      this._labels && this._labels[z] !== undefined ? this._labels[z] : z;\n\n    // For GMC grids, Leaflet's coords map 1:1 to WMTS COL/ROW\n    const tileRow = coords.y;\n    const tileCol = coords.x;\n\n    // If not GMC and no labels given, we can't compute generic grid transforms safely\n    if (!this._gmc && !this._labels) {\n      throw new Error(\n        \"WMTS: Non-GoogleMapsCompatible grids require tileMatrixLabels mapping.\"\n      );\n    }\n\n    // Expand subdomain and build full request URL\n    const url = L.Util.template(this._baseUrl, {\n      s: this._getSubdomain(coords)\n    });\n\n    // Compose KVP params for WMTS GetTile\n    const params = {\n      ...this._wmtsParams,\n      TILEMATRIX: String(matrix),\n      TILEROW: String(tileRow),\n      TILECOL: String(tileCol)\n    };\n\n    // Safely append params (handles '?'/'&' automatically)\n    return url + L.Util.getParamString(params, url);\n  }\n\n  setParams(params, noRedraw) {\n    // Map friendly keys to WMTS KVP where applicable\n    if (params.layer) this._wmtsParams.LAYER = String(params.layer);\n    if (params.style) this._wmtsParams.STYLE = String(params.style);\n    if (params.tileMatrixSet)\n      this._wmtsParams.TILEMATRIXSET = String(params.tileMatrixSet);\n    if (params.format) this._wmtsParams.FORMAT = String(params.format);\n\n    // Update labels and compatibility mode\n    if (params.tileMatrixLabels) this._labels = params.tileMatrixLabels;\n    if (typeof params.googleMapsCompatible === \"boolean\")\n      this._gmc = params.googleMapsCompatible;\n\n    // Merge any new extraParams\n    if (params.extraParams) {\n      for (const [k, v] of Object.entries(params.extraParams)) {\n        this._wmtsParams[k.toUpperCase()] = String(v);\n      }\n    }\n\n    // Replace baseQuery if provided\n    if (params.baseQuery) {\n      const sep = this._url.includes(\"?\") ? \"&\" : \"?\";\n      this._baseUrl = `${this._url}${sep}${params.baseQuery}`;\n    }\n\n    if (!noRedraw) this.redraw();\n    return this;\n  }\n}\n\nexport function wmts(url, options) {\n  return new WMTS(url, options);\n}\n"],"names":["L"],"mappings":"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"}